generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  username  String   @unique
  email     String   @unique
  password  String
  role      Role     @default(ADMIN) // USER or ADMIN
  posts     Post[]
  comments  Comment[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userColor String?
  biography String?
  fullName  String?
  profilePicture String?
  profilePicturePublicId  String? 

  followers Follower[] @relation("followers")
  following Follower[] @relation("following")

  commentReactions           CommentReaction[]
}

model Follower {
  id          String   @id @default(uuid())
  followerId  String
  followingId String
  createdAt   DateTime @default(now())

  follower  User @relation("followers", fields: [followerId], references: [id])
  following User @relation("following", fields: [followingId], references: [id])

  @@unique([followerId, followingId])
}

model Post {
  id          String   @id @default(uuid())
  title       String
  content     String
  published   Boolean  @default(false)
  authorId    String
  excerpt     String?  
  thumbnail   String?  
  author      User     @relation(fields: [authorId], references: [id])
  comments    Comment[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Comment {
  id        String   @id @default(uuid())
  content   String
  postId    String
  post      Post     @relation(fields: [postId], references: [id])
  authorId  String?
  author    User?    @relation(fields: [authorId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  parentId    String? 
  parent      Comment? @relation("CommentReplies", fields: [parentId], references: [id], onDelete: Cascade)
  
  replies     Comment[] @relation("CommentReplies")
  reactions   CommentReaction[]
}

model CommentReaction {
  id        String   @id @default(uuid())
  commentId String
  userId    String
  reaction  ReactionType
  createdAt DateTime @default(now())

  comment   Comment @relation(fields: [commentId], references: [id])
  user      User    @relation(fields: [userId], references: [id])

  @@unique([commentId, userId])
}

enum ReactionType {
  LIKE
  DISLIKE
}

enum Role {
  USER
  ADMIN
}

